import aiohttp
from aiogram import types
from aiogram.types import InlineKeyboardButton

from app.config import FASTAPI_URL
from app.core.utils import edit_message_with_keyboard, create_keyboard


async def show_main_menu(message: types.Message):
    keyboard = create_keyboard([
        [InlineKeyboardButton(text='üí∞ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏', callback_data='show_expense_actions')],
        [InlineKeyboardButton(text='üìÅ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏', callback_data='show_category_actions')],
        [InlineKeyboardButton(text='‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data='show_instructions')],
        [InlineKeyboardButton(text='üßπ –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç', callback_data='clear_chat')]
    ])
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


async def show_instructions(callback_query: types.CallbackQuery):
    instructions = (
        '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤. –í–æ—Ç –∫–∞–∫ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ–Ω—è:\n'
        '1. –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã".\n'
        '2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å—Ö–æ–¥—ã: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã".\n'
        '3. –£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—Ö–æ–¥: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã", '
        '–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –º–µ–Ω—é –≤—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–∞–∫–æ–π-–ª–∏–±–æ —Ä–∞—Å—Ö–æ–¥ –Ω–∞–∂–∞–≤ –Ω–∞ –Ω–µ–≥–æ.\n'
        '4. –°—á–∏—Ç–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –ø–µ—Ä–∏–æ–¥: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "üìÖ –†–∞—Å—Ö–æ–¥—ã –∑–∞ –ø–µ—Ä–∏–æ–¥".\n'
        '5. –°—á–∏—Ç–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ '
        '"üìÖ –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥".\n'
        '6. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "üìä –û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã".\n'
        '7. –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "‚ûï –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é".\n'
        '8. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "üìã –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏".\n'
        '9. –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "üìã –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", '
        '–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –º–µ–Ω—é –≤—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞–∂–∞–≤ –Ω–∞ –Ω–µ—ë. –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—Å–µ –µ—ë —Ä–∞—Å—Ö–æ–¥—ã —É–¥–∞–ª—è—é—Ç—Å—è.\n'
        '10. –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç: –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üßπ –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç".\n'
    )
    keyboard = create_keyboard([
        [InlineKeyboardButton(text='üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu')]
    ])
    await callback_query.message.edit_text(instructions, reply_markup=keyboard)
    await callback_query.answer()


async def show_main_menu_callback(callback_query: types.CallbackQuery):
    keyboard = create_keyboard([
        [InlineKeyboardButton(text='üí∞ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏', callback_data='show_expense_actions')],
        [InlineKeyboardButton(text="üìÅ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏", callback_data='show_category_actions')],
        [InlineKeyboardButton(text='‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data='show_instructions')],
        [InlineKeyboardButton(text='üßπ –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç', callback_data='clear_chat')]
    ])
    await edit_message_with_keyboard(callback_query.message, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', keyboard)
    await callback_query.answer()


async def show_expense_actions(callback_query: types.CallbackQuery):
    keyboard = create_keyboard([
        [InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã', callback_data='add_expense')],
        [InlineKeyboardButton(text='üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã', callback_data='show_expenses')],
        [InlineKeyboardButton(text='üìÖ –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥',
                              callback_data='count_expenses_by_category_and_date')],
        [InlineKeyboardButton(text='üìÖ –†–∞—Å—Ö–æ–¥—ã –∑–∞ –ø–µ—Ä–∏–æ–¥', callback_data='count_expenses_in_date_range')],
        [InlineKeyboardButton(text='üìä –û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã', callback_data='total_expenses')],
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='main_menu')]
    ])
    await edit_message_with_keyboard(callback_query.message, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏:', keyboard)
    await callback_query.answer()


async def show_category_actions(callback_query: types.CallbackQuery):
    keyboard = create_keyboard([
        [InlineKeyboardButton(text='‚ûï –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='create_category')],
        [InlineKeyboardButton(text='üìã –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data='show_categories')],
        [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='main_menu')]
    ])
    await edit_message_with_keyboard(callback_query.message, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:', keyboard)
    await callback_query.answer()


async def start_command(message: types.Message):
    user = {
        'id': message.from_user.id,
        'name': message.from_user.username or message.from_user.first_name
    }
    async with aiohttp.ClientSession() as session:
        async with session.get(f'{FASTAPI_URL}/users/{user['id']}') as response:
            if response.status == 404:
                async with session.post(f'{FASTAPI_URL}/users/', json=user) as post_response:
                    if post_response.status != 200:
                        await message.answer('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
                        return
    description = (
        'üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ExpenseTrackerBot! üéâ\n\n'
        'üí∞ –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —É—á—ë—Ç—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤:\n\n'
        '‚ú® –ß—Ç–æ —è —É–º–µ—é:\n'
        'üìù –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã\n'
        'üìä –°—á–∏—Ç–∞—Ç—å —Ç—Ä–∞—Ç—ã –∑–∞ –ª—é–±–æ–π –ø–µ—Ä–∏–æ–¥\n'
        'üìÅ –û—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n'
        'üöÄ –ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å - –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ!'
    )
    await message.answer(description)
    await show_main_menu(message)


async def clear_chat(message: types.Message):
    try:
        current_message_id = message.message_id
        deleted_count = 0
        for message_id in range(current_message_id, 0, -1):
            try:
                await message.bot.delete_message(message.chat.id, message_id)
                deleted_count += 1
                if deleted_count >= 100:
                    break
            except Exception:
                break
        keyboard = create_keyboard([
            [InlineKeyboardButton(text='üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu')]
        ])
        await message.answer(f'‚ú® –£–¥–∞–ª–µ–Ω–æ {deleted_count} —Å–æ–æ–±—â–µ–Ω–∏–π', reply_markup=keyboard)
    except Exception:
        await message.answer('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞')


async def clear_chat_callback(callback_query: types.CallbackQuery):
    await clear_chat(callback_query.message)
    await callback_query.answer()
